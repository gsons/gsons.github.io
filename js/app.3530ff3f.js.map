{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4241","webpack:///./src/App.vue?a62f","webpack:///./src/App.vue?bff9","webpack:///./src/router.js","webpack:///./src/db.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","app","jsonpScriptSrc","p","chunk-6917c432","chunk-080b105c","chunk-fa5979ce","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","clearTimeout","chunk","errorType","realSrc","error","undefined","setTimeout","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_bfa81578_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","component","componentNormalizer","App","Vue","use","Router","routes","path","redirect","meta","title","forEach","route","router","beforeEach","to","from","next","html5sql","readTransactionAvailable","doNothing","emptyArray","database","logInfo","logErrors","putSelectResultsInArray","defaultFailureCallback","trim","string","replace","isArray","obj","toString","isUndefined","isSelectStatementRegex","RegExp","isSelectStmt","sqlstring","test","allStatementsAreSelectOnly","SQLObjects","sql","sqlProcessor","transaction","sqlObjects","finalSuccess","failure","sequenceNumber","dataForNextTransaction","runTransaction","executeSql","successCallback","failureCallback","results","max","rowsArray","log","rows","item","success","message","SQLObject","options","sqlObjectCreator","sqlInput","split","openDatabase","displayname","size","whenOpen","readTransaction","process","finalSuccessCallback","changeVersion","oldVersion","newVersion","version","query","promise_default","a","rowArray","el","render","h","DB","axios","res"],"mappings":"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","file":"js/app.3530ff3f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-6917c432\":\"1be734b0\",\"chunk-080b105c\":\"9f7da7b4\",\"chunk-fa5979ce\":\"2a48f6b1\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-6917c432\":1,\"chunk-080b105c\":1,\"chunk-fa5979ce\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-6917c432\":\"57fa725b\",\"chunk-080b105c\":\"baa99fbd\",\"chunk-fa5979ce\":\"8e68702f\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=bfa81578&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\r\nimport Router from 'vue-router';\r\n\r\nVue.use(Router);\r\n\r\nconst routes = [\r\n  {\r\n    path: '*',\r\n    redirect: '/list'\r\n  },\r\n  {\r\n    name: 'list',\r\n    component: () => import('./view/list'),\r\n    meta: {\r\n      title: 'list'\r\n    }\r\n  },\r\n  {\r\n    name: 'view',\r\n    path: '/view/:id',\r\n    component: () => import('./view/view'),\r\n    meta: {\r\n      title: 'view'\r\n    }\r\n  }\r\n];\r\n\r\n// add route path\r\nroutes.forEach(route => {\r\n  route.path = route.path || '/' + (route.name || '');\r\n});\r\n\r\nconst router = new Router({ routes });\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const title = to.meta && to.meta.title;\r\n  if (title) {\r\n    document.title = title;\r\n  }\r\n  next();\r\n});\r\n\r\nexport {\r\n  router\r\n};","/* eslint-disable */\r\nvar html5sql = (function () {\r\n    var readTransactionAvailable = false;\r\n    var doNothing = function () {};\r\n    var emptyArray = [];\r\n\r\n    /**\r\n     * This is the core object that gets returned by this script.  It contains\r\n     * certain config values which can be modified by users.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    var html5sql = {\r\n        database: null,\r\n        logInfo: false,\r\n        logErrors: true,\r\n        putSelectResultsInArray: true,\r\n        defaultFailureCallback: doNothing\r\n    };\r\n\r\n    // Utility Functions from Underscore.js\r\n    function trim(string) {\r\n        return string.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\r\n    }\r\n    function isArray(obj) {\r\n        return Object.prototype.toString.call(obj) === '[object Array]';\r\n    }\r\n    function isUndefined(obj) {\r\n        return obj === void 0;\r\n    }\r\n\r\n    var isSelectStatementRegex = new RegExp('^select\\\\s', 'i');\r\n    function isSelectStmt(sqlstring) {\r\n        return isSelectStatementRegex.test(sqlstring);\r\n    };\r\n\r\n    // Returns true if all SQL statement objects are SELECT statements.\r\n    function allStatementsAreSelectOnly(SQLObjects) {\r\n        var i = 0;\r\n\r\n        //Loop over SQL objects ensuring they are select statements\r\n        do {\r\n            //If the sql string is not a select statement return false\r\n            if (!isSelectStmt(SQLObjects[i].sql)) {\r\n                return false;\r\n            }\r\n            i++;\r\n        } while (i < SQLObjects.length);\r\n\r\n        //If all the statements happen to be select statements return true\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * sqlProcessor is the core of html5sql and is responsible for executing all\r\n     * sql statements.  It is a private function and does all the heavy lifting.\r\n     *\r\n     * @param  {SQLTransaction} transaction  A sql transaction that the sql statements should be executed\r\n     *                                       within.\r\n     * @param  {[SQLObjects]}   sqlObjects   An array of one or more SqlObjects.\r\n     * @param  {[Function]}     finalSuccess A final success callback to execute when all statements have\r\n     *                                       been executed.\r\n     * @param  {[Function]}     failure      A failure callback.  Executed whenever any of the passed\r\n     *                                       statements encounter an error.\r\n     */\r\n    function sqlProcessor(transaction, sqlObjects, finalSuccess, failure) {\r\n        var sequenceNumber = 0,\r\n            dataForNextTransaction = null,\r\n            runTransaction = function () {\r\n                transaction.executeSql(sqlObjects[sequenceNumber].sql,\r\n                                       sqlObjects[sequenceNumber].data,\r\n                                       successCallback,\r\n                                       failureCallback);\r\n            },\r\n            successCallback = function (transaction, results) {\r\n                var i, max, rowsArray = [];\r\n\r\n                if(html5sql.logInfo){\r\n                    console.log(\"Success processing: \" + sqlObjects[sequenceNumber].sql);\r\n                }\r\n\r\n                //Process the results of a select putting them in a much more manageable array form.\r\n                if(html5sql.putSelectResultsInArray && isSelectStmt(sqlObjects[sequenceNumber].sql)){\r\n                    for(i = 0, max = results.rows.length; i < max; i++){\r\n                        rowsArray[i] = results.rows.item(i);\r\n                    }\r\n                } else {\r\n                    rowsArray = null;\r\n                }\r\n\r\n                //Call the success callback provided with sql object\r\n                //If an array of data is returned use that data as the\r\n                //data attribute of the next transaction\r\n                dataForNextTransaction = sqlObjects[sequenceNumber].success(transaction, results, rowsArray);\r\n                sequenceNumber++;\r\n                if (dataForNextTransaction && isArray(dataForNextTransaction)) {\r\n                    sqlObjects[sequenceNumber].data = dataForNextTransaction;\r\n                    dataForNextTransaction = null;\r\n                } else {\r\n                    dataForNextTransaction = null;\r\n                }\r\n\r\n                if (sqlObjects.length > sequenceNumber) {\r\n                    runTransaction();\r\n                } else {\r\n                    finalSuccess(transaction, results, rowsArray);\r\n                }\r\n            },\r\n            failureCallback = function (transaction, error) {\r\n                if(html5sql.logErrors){\r\n                    console.error(\"Error: \" + error.message +\r\n                            \" while processing statment \" + (sequenceNumber + 1)+\": \" + sqlObjects[sequenceNumber].sql);\r\n                }\r\n                failure(error, sqlObjects[sequenceNumber].sql);\r\n            };\r\n\r\n        runTransaction();\r\n    };\r\n\r\n    var SQLObject = function(options){\r\n        if (typeof options === \"string\") {\r\n            options = {\r\n                sql: options\r\n            }\r\n        }\r\n        this.sql = options.sql;\r\n        this.data = options.data || emptyArray;\r\n        this.success = options.success || doNothing;\r\n\r\n         // Check to see that the sql object is formated correctly.\r\n        if (typeof this.sql     !== \"string\"   ||\r\n            typeof this.success !== \"function\" ||\r\n            !isArray(this.data)) {\r\n            throw new Error(\"Malformed sql object: \" + this);\r\n        }\r\n    };\r\n\r\n    function sqlObjectCreator(sqlInput) {\r\n        var i;\r\n        if (typeof sqlInput === \"string\") {\r\n            sqlInput = trim(sqlInput);\r\n\r\n            //Separate sql statements by their ending semicolon\r\n            sqlInput = sqlInput.split(';');\r\n\r\n            for(i = 1; i < sqlInput.length; i++){\r\n                //Ensure semicolons within quotes are put back in\r\n                while(sqlInput[i].split(/[\"]/gm).length % 2 === 0 ||\r\n                      sqlInput[i].split(/[']/gm).length % 2 === 0 ||\r\n                      sqlInput[i].split(/[`]/gm).length % 2 === 0){\r\n                    sqlInput.splice(i,2,sqlInput[i] + \";\" + sqlInput[i+1]);\r\n                }\r\n                //Add back the semicolon at the end of the line\r\n                sqlInput[i] = trim(sqlInput[i]) + ';';\r\n                //Get rid of any empty statements\r\n                if(sqlInput[i] === ';'){\r\n                    sqlInput.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        if(isArray(sqlInput) === false){\r\n            // At this point the user has most likely passed in a sql object\r\n            // We put it into an array so it will fit the normal format\r\n            sqlInput = [new SQLObject(sqlInput)];\r\n        }\r\n        for (i = 0; i < sqlInput.length; i++) {\r\n            sqlInput[i] = new SQLObject(sqlInput[i]);\r\n        }\r\n        return sqlInput;\r\n    };\r\n\r\n    html5sql.openDatabase =  function (name, displayname, size, whenOpen) {\r\n        html5sql.database = openDatabase(name, \"\", displayname, size);\r\n        readTransactionAvailable = typeof html5sql.database.readTransaction === 'function';\r\n        if (whenOpen) {\r\n            whenOpen();\r\n        }\r\n    }\r\n\r\n    /*\r\n     *  Arguments:\r\n     *  1. sql =                             ~ there are four ways to pass sql\r\n     *                                         statements to html5sql.js\r\n     *     a. {object SQLStatementObject}    ~ a single sql statement object\r\n     *           or\r\n     *     b. [array SQLStatementObject(s)]  ~ a collection of SQL statement objects\r\n     *           or\r\n     *     c. \"string SQL Statement(s)\"      ~ a SQL string to be split into individual\r\n     *                                         statements at the ';' character\r\n     *           or\r\n     *     d. [array SQl Statement(s)]       ~ a collection of SQL strings\r\n     *\r\n     *  2. finalSuccessCallback = (function) ~ called after all sql statements have\r\n     *                                         been processed.  Optional.\r\n     *\r\n     *  3. failureCallback =      (function) ~ called if any of the sql statements\r\n     *                                         fails.  A default one is used if none\r\n     *                                         is provided.  Optional.\r\n     *\r\n     *  SQLStatementObject:\r\n     *  {\r\n     *   sql: \"string\",       !Required!  ~ Your sql as a string\r\n     *   data: [array],        Optional   ~ The array of data to be sequentially\r\n     *                                      inserted into your sql at the ?\r\n     *   success: (function),  Optional   ~ A function to be called if this\r\n     *                                      individual sql statement succeeds\r\n     *   failure: (function),  Optional   ~ A function to be called if this\r\n     *                                      individual sql statement fails\r\n     *  }\r\n     *\r\n     *  Usage:\r\n     *  html5sql.process(\r\n     *      {\r\n     *         sql: \"UPDATE users SET ...\",\r\n     *         data: [],\r\n     *         success: function(){},\r\n     *         failure: function(){}\r\n     *      },\r\n     *      function(){}, // finalSuccessCallback\r\n     *      function(){}  // failureCallback\r\n     *  );\r\n     *\r\n     */\r\n    html5sql.process = function (sqlInput, finalSuccessCallback, failureCallback) {\r\n        if (html5sql.database) {\r\n\r\n            var sqlObjects = sqlObjectCreator(sqlInput);\r\n\r\n            if(isUndefined(finalSuccessCallback)){\r\n                finalSuccessCallback = doNothing;\r\n            }\r\n\r\n            if(isUndefined(failureCallback)){\r\n                failureCallback = html5sql.defaultFailureCallback;\r\n            }\r\n\r\n            if (allStatementsAreSelectOnly(sqlObjects) && readTransactionAvailable) {\r\n                html5sql.database.readTransaction(function (transaction) {\r\n                    sqlProcessor(transaction, sqlObjects, finalSuccessCallback, failureCallback);\r\n                }, failureCallback);\r\n            } else {\r\n                html5sql.database.transaction(function (transaction) {\r\n                    sqlProcessor(transaction, sqlObjects, finalSuccessCallback, failureCallback);\r\n                }, failureCallback);\r\n            }\r\n        } else {\r\n            // Database hasn't been opened.\r\n            if(html5sql.logErrors){\r\n                console.error(\"Error: Database needs to be opened before sql can be processed.\");\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /* This is the same as html5sql.process but used when you want to change the\r\n     * version of your database.  If the database version matches the oldVersion\r\n     * passed to the function the statements passed to the function are\r\n     * processed and the version of the database is changed to the new version.\r\n     *\r\n     *  Arguments:\r\n     *  1. oldVersion = \"String\"             ~ the old version to upgrade\r\n     *  2. newVersion = \"String\"             ~ the new version after the upgrade\r\n     *  3. sql =                             ~ there are four ways to pass sql\r\n     *                                         statements to html5sql.js\r\n     *     a. {object SQLStatementObject}    ~ a single sql statement object\r\n     *           or\r\n     *     b. [array SQLStatementObject(s)]  ~ a collection of SQL statement objects\r\n     *           or\r\n     *     c. \"string SQL Statement(s)\"      ~ a SQL string to be split into individual\r\n     *                                         statements at the ';' character\r\n     *           or\r\n     *     d. [array SQl Statement(s)]       ~ a collection of SQL strings\r\n     *\r\n     *  4. finalSuccessCallback = (function) ~ called after all sql statements have\r\n     *                                         been processed.  Optional.\r\n     *\r\n     *  5. failureCallback =      (function) ~ called if any of the sql statements\r\n     *                                         fails.  A default one is used if none\r\n     *                                         is provided.  Optional.\r\n     *\r\n     *  SQLStatementObject:\r\n     *  {\r\n     *   sql: \"string\",       !Required!  ~ Your sql as a string\r\n     *   data: [array],        Optional   ~ The array of data to be sequentially\r\n     *                                      inserted into your sql at the ?\r\n     *   success: (function),  Optional   ~ A function to be called if this\r\n     *                                      individual sql statement succeeds\r\n     *   failure: (function),  Optional   ~ A function to be called if this\r\n     *                                      individual sql statement fails\r\n     *  }\r\n     *\r\n     *  Usage:\r\n     *  html5sql.changeVersion(\r\n     *      \"1.0\",                             // oldVersion\r\n     *      \"2.0\",                             // newVersion\r\n     *      [{                                 // sql\r\n     *         sql: \"ALTER TABLE users ...\",\r\n     *         data: [],\r\n     *         success: function(){},\r\n     *         failure: function(){}\r\n     *       },\r\n     *       {\r\n     *         sql: \"UPDATE users ...\",\r\n     *         data: [],\r\n     *         success: function(){},\r\n     *         failure: function(){}\r\n     *       }],\r\n     *      function(){},                      // finalSuccessCallback\r\n     *      function(){}                       // failureCallback\r\n     *  );\r\n     *\r\n     */\r\n    html5sql.changeVersion = function (oldVersion, newVersion, sqlInput, finalSuccessCallback, failureCallback) {\r\n        if (html5sql.database) {\r\n            if(html5sql.database.version === oldVersion){\r\n                var sqlObjects = sqlObjectCreator(sqlInput);\r\n\r\n                if(isUndefined(finalSuccessCallback)){\r\n                finalSuccessCallback = doNothing;\r\n                }\r\n\r\n                if(isUndefined(failureCallback)){\r\n                    failureCallback = html5sql.defaultFailureCallback;\r\n                }\r\n\r\n                html5sql.database.changeVersion(oldVersion, newVersion, function (transaction) {\r\n                    sqlProcessor(transaction, sqlObjects, finalSuccessCallback, failureCallback);\r\n                }, failureCallback);\r\n            }\r\n        } else {\r\n            // Database hasn't been opened.\r\n            if(html5sql.logErrors){\r\n                console.log(\"Error: Database needs to be opened before sql can be processed.\");\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n\r\n    return html5sql;\r\n})();\r\n\r\nexport default html5sql;","import Vue from 'vue';\nimport App from './App';\nimport { router } from './router';\nimport html5sql from \"./db\";\nimport axios from \"axios\";\n\nnew Vue({\n  router,\n  el: '#app',\n  render: h => h(App)\n});\n\nfunction query(sql) {\n  return new Promise((resolve, reject) => {\n    html5sql.process(\n      sql,\n      (transaction, results, rowArray) => {\n        resolve(rowArray);\n      },\n      err => {\n        reject(err);\n      }\n    );\n  });\n}\nVue.prototype.query = query;\n\nVue.prototype.DB = html5sql.openDatabase(\"video\", \"1.0\", 5 * 1024 * 1024);\n\naxios.get(\"video.sql\").then(res => {\n  query(res.data);\n});"],"sourceRoot":""}